# Generated by Django 3.1.5 on 2021-01-19 16:17

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'category',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line_channel_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=30)),
                ('birthday', models.DateField()),
                ('email_address', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('city', models.CharField(max_length=10)),
                ('district', models.CharField(max_length=10)),
                ('street_address', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customer',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WishlistModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('items', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.customermodel')),
            ],
            options={
                'db_table': 'wishlist',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('sku', models.CharField(max_length=20)),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('inventory', models.JSONField()),
                ('in_stock', models.BooleanField(default=True)),
                ('description', models.TextField(max_length=600)),
                ('image_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(validators=[django.core.validators.validate_ipv4_address, django.core.validators.validate_ipv6_address, django.core.validators.validate_ipv46_address]), size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.categorymodel')),
            ],
            options={
                'db_table': 'product',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('items', models.JSONField()),
                ('payment_term', models.CharField(choices=[('CREDITCARD', 'CREDITCARD'), ('ATM', 'ATM')], max_length=10)),
                ('shipment', models.CharField(choices=[('711', '711'), ('FAMILYMART', 'FAMILYMART'), ('DELIVERY', 'DELIVERY')], max_length=10)),
                ('shopping_fee', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('shipping_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('shipping_address', models.CharField(max_length=200)),
                ('shipping_address_store', models.CharField(max_length=50)),
                ('total', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('paid', models.BooleanField(default=False)),
                ('shipped', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.customermodel')),
            ],
            options={
                'db_table': 'order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ORDER', 'ORDER'), ('RECEIPT', 'RECEIPT'), ('MARKETING', 'MARKETING'), ('INFO', 'INFO')], max_length=15)),
                ('receiver', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('content', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.customermodel')),
            ],
            options={
                'db_table': 'email',
                'ordering': ['-created_at'],
            },
        ),
    ]
